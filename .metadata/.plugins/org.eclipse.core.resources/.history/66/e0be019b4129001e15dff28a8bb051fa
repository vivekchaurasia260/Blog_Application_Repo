package com.project.demo.blog.controllers;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.project.demo.blog.payloads.ApiResponse;
import com.project.demo.blog.payloads.CategoryDto;
import com.project.demo.blog.services.CategoryService;

@RestController
@RequestMapping("/api/categories")
public class CategoryController {
	
	@Autowired
	private CategoryService categoryService;
	
	// create
	@PostMapping("/")
	public ResponseEntity<CategoryDto> createCategory(@RequestBody CategoryDto categoryDto) {
		
		CategoryDto createCategory = this.categoryService.createCategory(categoryDto);
		return new ResponseEntity<CategoryDto>(createCategory, HttpStatus.CREATED);
	}
	
	// update
	@PutMapping("/update/{categoryId}")
	public ResponseEntity<CategoryDto> updateCategory(@RequestBody CategoryDto categoryDto, @PathVariable("categoryId") int cId) {
		
		CategoryDto updateCategory = this.categoryService.updateCategory(categoryDto, cId);
		
		return new ResponseEntity<CategoryDto>(updateCategory, HttpStatus.ACCEPTED);
	}
	
	//delete
	@DeleteMapping("/delete/{categoryId}")
	public ResponseEntity<ApiResponse> deleteCategory(@PathVariable("categoryId") int cId) {
		
		this.categoryService.deleteCategory(cId);
		
		return new ResponseEntity<ApiResponse>(new ApiResponse("Category Deleted Successfully !!", true), HttpStatus.OK);
	}
	
	// Retrieve by Id
	@GetMapping("/{categoryId}")
	public ResponseEntity<CategoryDto> getCategoryById(@PathVariable("categoryId") int cid) {
		CategoryDto categoryById = this.categoryService.getCategoryById(cid);
		
		return new ResponseEntity<CategoryDto>(categoryById, HttpStatus.OK);
	}
	
	// retrieve all
	@GetMapping("/all")
	public ResponseEntity<List<CategoryDto>> getAllCategory() {
		List<CategoryDto> categories = this.categoryService.getCategories();
		
		return new ResponseEntity<List<CategoryDto>>(categories, HttpStatus.OK);
	}
}
